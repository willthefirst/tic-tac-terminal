#!/usr/bin/env node

const chalk = require("chalk");
const readline = require("readline");
const args = process.argv;

const gameState = {
  board: [
    ["X", "_", "_"],
    ["_", "O", "_"],
    ["_", "_", "_"],
  ],
};

/**
 * Prints usage instructions.
 */
const printUsage = function () {
  const instructions = `
Tic Tac Toe (by Will Moritz)

usage: 

tic-tac-toe <command>

commands can be:
    start:    start a new game
    help:     show instructions
    `;

  console.log(instructions);
};

const showBoard = function (boardArray) {
  let result = ``;

  for (let i = 0; i < boardArray.length; i++) {
    const row = boardArray[i];
    let rowString = ``;
    for (let j = 0; j < row.length; j++) {
      const cell = row[j];
      rowString = rowString + cell + " ";
    }
    result = result + rowString + "\n";
  }

  console.log(result);
};

/**
 * Starts a new game
 */
const start = function () {
  showBoard(gameState.board);
};

/**
 * Initializes interactive console.
 */
const init = function () {
  // Set up readline
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });

  const commands = {
    start: start,
    help: printUsage,
  };
  printUsage();

  rl.prompt();

  // Listen for user input
  rl.on("line", (input) => {
    input = input.toLowerCase();
    if (input in commands) {
      commands[input]();
    } else {
      console.log(`Invalid argument: ${input}`);
    }
  });
};

init();
